memory_limit = 3500M

date.timezone = "UTC"

display_errors = 0
error_log = /dev/stderr
log_errors = 1
log_errors_max_len = 8192

; Allow for slow-running batch tasks
max_execution_time = 1200

; Socket timeout for impacts Symfony Mailer ESMTP transports but also e.g. MatchBot Redis.
; The global default of 60s is known safe so we set it for now. We might consider a slightly
; lower value for our apps if fast failing would be helpful in any situations. From behaviour
; in mid 2022 we know that 8 seconds is too low for ElastiCache Redis in moderately-rare
; (several times per week for very frequent tasks) ECS task run edge cases.
default_socket_timeout = 60

post_max_size = 8M

; See https://secure.php.net/manual/en/opcache.configuration.php#ini.opcache.max-accelerated-files
; and https://www.scalingphpbook.com/blog/2014/02/14/best-zend-opcache-settings.html
opcache.max_accelerated_files = 7963

; We have a good amount of memory available and pretty big codebases, so increase this from the default 128MB
opcache.memory_consumption = 384

; Increase from default 8MB
opcache.interned_strings_buffer = 32

; As recommended by https://secure.php.net/manual/en/opcache.installation.php and
; https://www.scalingphpbook.com/blog/2014/02/14/best-zend-opcache-settings.html
opcache.fast_shutdown = 1

; Task definition artifacts are immutable on ECS and cache check time is 0 on local -> may as well make tasks faster
opcache.enable_cli = 1

; Note opcache.validate_timestamps = 0 is added for ECS instances by modifications in apps' own deployment
; Dockerfiles. The below is intended for development only – it re-checks files immediately – and is rendered
; redundant on ECS by that setting.
opcache.revalidate_freq = 0

expose_php = Off
